from selenium import webdriver

from selenium.webdriver.common.keys import Keys
import time

from selenium.webdriver.common.action_chains import ActionChains

class User:
    def __init__(self, name, link, username, password):
        """ assign username, password and firefox webdriver."""
        self.name = name
        self.link = link
        self.username = username
        self.password = password
        self.bot = webdriver.Firefox()

    def login(self, user_name, pass_name):
        """ used to logedIn into account."""
        print('-------'+ self.name +' login-------')
        bot = self.bot
        
        bot.get(self.link)
        print('opened '+ self.link +'...')
        
        if(self.name == 'LinkedIn'):
            signin = bot.find_element_by_class_name('nav__button-secondary').click()
        
        time.sleep(2)
        
        email = bot.find_element_by_name(user_name)
        password = bot.find_element_by_name(pass_name)

        email.clear()
        password.clear()
        print('cleared login feilds')
        
        email.send_keys(self.username)
        print('username inserted...')
        time.sleep(1)
        password.send_keys(self.password)
        print('password inserted...')
        time.sleep(1)
        password.send_keys(Keys.RETURN)
        print('Successfully logedin...')
        print('loading up for 10 sec...')
        time.sleep(10)
    
    def post(self, data, postclass, message_class, submit_class):
        bot = self.bot
        time.sleep(1)
        
        if(self.name == 'Facebook'):
            create_post = bot.find_element_by_id(postclass)
            print('create post: ')
            create_post.click()
            time.sleep(3)
        elif (self.name == 'LinkedIn'):
            create_post = bot.find_element_by_class_name(postclass)
            print('create post: ')
            create_post.click()
            time.sleep(3)
        else:
            create_post = postclass
        
        
        
        message = bot.find_element_by_class_name(message_class)
        #message.click()
        time.sleep(1)
        #message.send_keys(Keys.RETURN)
        print('message: ')
        message.send_keys(data)
        print('message inserted...')
        time.sleep(3)
        if(self.name == 'Twitter'):
            actions = ActionChains(bot) 
            actions.send_keys(Keys.TAB * 6)
            actions.send_keys(Keys.RETURN)
            actions.perform()
            print('message posted...')
            time.sleep(3)
        else:
            submit = bot.find_element_by_class_name(submit_class)
            print(submit)
            submit.click()
            print('message posted...')
            time.sleep(3)
    
        
    
    def exit(self):
        bot = self.bot
        print(self.name + ' is shutdown in 3 sec...')
        time.sleep(3)
        bot.quit()
        


# class LinkedIn:
#     def __init__(self, username, password):
#         """ assign username, password and firefox webdriver."""
#         self.username = username
#         self.password = password
#         self.bot = webdriver.Firefox()

#     def login(self):
#         """ used to logedIn into account."""

#         print('----------LinkedIn login---------')
#         bot = self.bot
#         bot.get('https://www.linkedin.com/')
#         print('opened: https://www.linkedin.com/')
#         time.sleep(2)
#         signin = bot.find_element_by_link_text('Sign in')
#         print('Clicked on Sign in')
#         signin.click()
#         time.sleep(3)
#         email = bot.find_element_by_id('username')
#         password = bot.find_element_by_id('password')
#         email.clear()
#         password.clear()
#         print('cleared login feilds')
#         email.send_keys(self.username)
#         print('username inserted...')
#         time.sleep(1)
#         password.send_keys(self.password)
#         print('password inserted..')
#         time.sleep(1)
#         password.send_keys(Keys.RETURN)
#         print('Successfully login...')
#         time.sleep(5)

#     def exit(self):
#         bot = self.bot
#         bot.quit()


twitter = User(
        'Twitter', 
        'https://twitter.com/', 
        'username',
        'password'
)
twitter.login(
        'session[username_or_email]', 
        'session[password]'
)
twitter.post(
        'testing something #autogenerated', 
        None, 
        'notranslate', 
        None
)

# from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.common.action_chains import ActionChains

# N = 5  # number of times you want to press TAB

# actions = ActionChains(browser) 
# for _ in range(N):
#     actions = actions.send_keys(Keys.TAB)
# actions.perform()
# # new logic
# actions = ActionChains(browser) 
# actions.send_keys(Keys.TAB * N)
# actions.perform()



# linkedin = User(
#         'LinkedIn',
#         'https://www.linkedin.com/',
#         'username',
#         'password'
# )
# linkedin.login(
#         'session_key', 
#         'session_password'
# )
# linkedin.post(
#         'testing something #autogenerated', 
#         'share-box__open',
#         'mentions-texteditor__contenteditable', 
#         'share-actions__primary-action'
# )

# facebook = User(
#         'Facebook',
#         'https://www.facebook.com/',
#         'username',
#         'password'
# )
# facebook.login(
#         'email',
#         'pass'
# )
# facebook.post(
#         'testing something #generated', 
#         'feedx_sprouts_container',
#         'notranslate', 
#         '_1mf7'
# )

#notranslate _5rpu _3nd0',

# # exit() function
# twitter.exit()
# linkedin.exit()
# facebook.exit()

